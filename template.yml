kind: Template
apiVersion: template.openshift.io/v1
parameters:
  - name: APP
    required: true
    value: finbif-ipt
  - name: BRANCH
    required: true
  - name: DATA_DIR
    required: true
    value: /srv/ipt
  - name: APP_PORT
    required: true
    value: "8080"
  - name: LIVENESS_PERIOD
    required: true
    value: "30"
  - name: FAILURE_THRESHOLD
    required: true
    value: "5"
  - name: READINESS_PERIOD
    required: true
    value: "5"
  - name: STORAGE
    required: true
  - name: HOST
    required: true
  - name: RCLONE_ACCESS_KEY_ID
    required: true
  - name: RCLONE_SECRET_ACCESS_KEY
    required: true
  - name: GITHUB_SECRET
    required: true
    generate: expression
    from: "[a-zA-Z0-9]{20}"
metadata:
  name: ${APP}
objects:
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: ${APP}-${BRANCH}
  spec:
    accessModes:
    - ReadWriteOnce
    persistentVolumeReclaimPolicy: Retain
    resources:
      requests:
        storage: ${STORAGE}
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: ${APP}-${BRANCH}
    labels:
      app: ${APP}
  spec:
    lookupPolicy:
      local: true
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: ${APP}-${BRANCH}
    labels:
      app: ${APP}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APP}-${BRANCH}:latest
    source:
      type: Git
      git:
        uri: https://github.com/luomus/${APP}.git
        ref: ${BRANCH}
    strategy:
      type: Docker
    triggers:
    - type: ConfigChange
    - type: GitHub
      github:
        secret: ${GITHUB_SECRET}
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: ${APP}-${BRANCH}
    labels:
      app: ${APP}
  spec:
    replicas: 1
    selector:
      app: ${APP}
      deploymentconfig: ${APP}-${BRANCH}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: ${APP}
          deploymentconfig: ${APP}-${BRANCH}
      spec:
        containers:
        - image: ${APP}-${BRANCH}:latest
          name: ${APP}-${BRANCH}
          ports:
          - containerPort: ${{APP_PORT}}
          volumeMounts:
          - mountPath: ${DATA_DIR}
            name: ${APP}-${BRANCH}
          livenessProbe:
            httpGet:
              path: /
              port: ${{APP_PORT}}
            failureThreshold: ${{FAILURE_THRESHOLD}}
            periodSeconds: ${{LIVENESS_PERIOD}}
          readinessProbe:
            httpGet:
              path: /
              port: ${{APP_PORT}}
            initialDelaySeconds: ${{READINESS_PERIOD}}
            periodSeconds: ${{READINESS_PERIOD}}
          env:
          - name: RCLONE_ACCESS_KEY_ID
            value: ${RCLONE_ACCESS_KEY_ID}
          - name: RCLONE_SECRET_ACCESS_KEY
            value: ${RCLONE_SECRET_ACCESS_KEY}
        volumes:
        - name: ${APP}-${BRANCH}
          persistentVolumeClaim:
            claimName: ${APP}-${BRANCH}
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ${APP}-${BRANCH}
        from:
          kind: ImageStreamTag
          name: ${APP}-${BRANCH}:latest
- kind: Service
  apiVersion: v1
  metadata:
    name: ${APP}-${BRANCH}
    labels:
      app: ${APP}
  spec:
    ports:
    - name: ${APP_PORT}
      port: ${{APP_PORT}}
      targetPort: ${{APP_PORT}}
    selector:
      app: ${APP}
      deploymentconfig: ${APP}-${BRANCH}
- kind: Route
  apiVersion: v1
  metadata:
    name: ${APP}-${BRANCH}
    labels:
      app: ${APP}
  spec:
    host: ${HOST}
    port:
      targetPort: ${{APP_PORT}}
    tls:
      termination: edge
    to:
      kind: Service
      name: ${APP}-${BRANCH}
    wildcardPolicy: None
